# Docker image
# Build a Docker image to run, deploy, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/docker

jobs:
- job: Linux
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - script: make fetch
    displayName: make fetch
  - script: docker build -t alpine-fastpack linux-build/alpine
    displayName: 'docker build'
  - script: docker run --rm --mount src=`pwd`,target=/fastpack,type=bind alpine-fastpack /bin/bash -c 'cd /fastpack && make install && make test && make setup-test && make test-integration'
    displayName: 'make test'

- job: MacOS
  pool:
    vmImage: 'macOS 10.13'
  variables:
    TRAVIS_OS_NAME: osx
  steps:
  - script: sed \
		    -i '' \
		    -e "s/%%VERSION%%/$$(node -p "require('./package.json').version")/g" \
		    Fastpack/Version.re
    displayName: replace version
  - script: sed \
		    -i '' \
		    -e "s/%%COMMIT%%/$$(git log --pretty=format:'%h' -n 1)/g" \
		    Fastpack/Version.re
    displayName: replace commit
  - script: make fetch
    displayName: make fetch
  - script: npm install -g yarn
    displayName: install Yarn
  - script: npm install -g esy@0.2.11
    displayName: install esy
  - script: make install
    displayName: make install
  - script: make test
    displayName: make test
  - script: make setup-test
    displayName: make setup-test
  - script: make test-integration
    displayName: make test-integration
  - script: make build
    displayName: make build (release)
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'vendor-darwin-fpack.exe'
      pathToPublish: '_build/default/bin/fpack.exe'

- job: Package
  dependsOn:
  - Linux
  - MacOS
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      artifactName: 'vendor-darwin-fpack.exe'
      downloadPath: dist/vendor-darwin/fpack.exe
  - script: cp -R node-service dist
    displayName: copy node-service
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: fpack
      pathToPublish: dist

