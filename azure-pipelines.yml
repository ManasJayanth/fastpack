# Docker image
# Build a Docker image to run, deploy, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/docker

name: $(Build.SourceVersion)
jobs:
- job: Linux
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.9'
  - script: |
      sed -i \
        -e "s/%%COMMIT%%/$(git log --pretty=format:'%h' -n 1)/g" \
        Fastpack/Version.re
  - script: docker build -t alpine-fastpack linux-build
    displayName: 'docker build'
  - script: docker run --rm --mount src=`pwd`,target=/fastpack,type=bind alpine-fastpack /bin/bash -c 'cd /fastpack && make install && make test && make setup-test && make test-integration && make build && ldd _build/default/bin/fpack.exe'
    displayName: 'make all'
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'vendor-linux-fpack.exe'
      pathToPublish: '_build/default/bin/fpack.exe'

- job: MacOS
  pool:
    vmImage: 'macOS 10.13'
  variables:
    TRAVIS_OS_NAME: osx
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.9'
  - script: |
      sed \
        -i '' \
        -e "s/%%COMMIT%%/$(git log --pretty=format:'%h' -n 1)/g" \
        Fastpack/Version.re
    displayName: replace commit
  - script: npm install -g yarn
    displayName: install Yarn
  - script: npm install -g esy@0.3.4
    displayName: install esy
  - script: make install
    displayName: make install
  - script: make test
    displayName: make test
  - script: make setup-test
    displayName: make setup-test
  - script: make test-integration
    displayName: make test-integration
  - script: make build
    displayName: make build (release)
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'vendor-darwin-fpack.exe'
      pathToPublish: '_build/default/bin/fpack.exe'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.9'
  - script: |
      sed \
        -i '' \
        -e "s/%%COMMIT%%/$(git log --pretty=format:'%h' -n 1)/g" \
        Fastpack/Version.re
    displayName: replace commit
  - script: npm install -g yarn
    displayName: install Yarn
  - script: npm install -g esy@0.3.4
    displayName: install esy
  - script: esy install
    displayName: esy install
    continueOnError: true
  - script: esy install
    displayName: esy install
    continueOnError: true
  - script: esy install
    displayName: esy install
  - script: node scripts/gen_link_flags.js
    displayName: node scripts/gen_link_flags
  - script: esy build
    displayName: esy build
  - script: _build/install/default/bin/fpack.exe --version
    displayName: test binary
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'vendor-windows-fpack.exe'
      pathToPublish: '_build/default/bin/fpack.exe'

- job: Package
  dependsOn:
  - Linux
  - MacOS
  - Windows
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: download osx binary
    inputs:
      artifactName: 'vendor-darwin-fpack.exe'
      downloadPath: .
  - script: cp -R vendor-darwin-fpack.exe/fpack.exe dist/vendor-darwin
    displayName: copy osx binary
  - task: DownloadBuildArtifacts@0
    displayName: download linux binary
    inputs:
      artifactName: 'vendor-linux-fpack.exe'
      downloadPath: .
  - script: cp -R vendor-linux-fpack.exe/fpack.exe dist/vendor-linux
    displayName: copy linux binary
  - task: DownloadBuildArtifacts@0
    displayName: download windows binary
    inputs:
      artifactName: 'vendor-windows-fpack.exe'
      downloadPath: .
  - script: cp -R vendor-windows-fpack.exe/fpack.exe dist/vendor-windows
    displayName: copy windows binary
  - script: cp -R node-service dist
    displayName: copy node-service
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: fpack
      pathToPublish: dist

